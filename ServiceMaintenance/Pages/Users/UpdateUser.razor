@page "/users/edit/{UserId}"
@inject UserService UserService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<h3>Edit User</h3>

<EditForm Model="editUser" OnValidSubmit="OnUpdateUser">
    <div class="form-group">
        <label for="FirstName">First Name</label>
        <InputText id="FirstName" @bind-Value="editUser.FirstName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="LastName">Last Name</label>
        <InputText id="LastName" @bind-Value="editUser.LastName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="UserName">Username</label>
        <InputText id="UserName" @bind-Value="editUser.UserName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" @bind-Value="editUser.Email" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Update</button>
    <a href="/users" class="btn btn-secondary">Cancel</a>
</EditForm>

@code {
    [Parameter] public string UserId { get; set; }
    private UserViewModel editUser = new UserViewModel();

    protected override async Task OnInitializedAsync()
    {
        editUser = await UserService.GetUserAsync(UserId);
    }

    private async Task OnUpdateUser()
    {
        await UserService.UpdateUserAsync(editUser);
        NavigationManager.NavigateTo("/users");
    }

   
}
