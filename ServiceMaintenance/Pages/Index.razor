@page "/"
@inject NavigationManager NavigationManager
@inject RepairItemService RepairItemService

<div class="row">
    @foreach (var statistic in statistics)
    {
        <div class="col-xl-3 col-sm-6 mb-xl-0 mb-4">
            <div class="card">
                <div class="card-body p-3">
                    <div class="row">
                        <div class="col-8">
                            <div class="numbers">
                                <p class="text-sm mb-0 text-capitalize font-weight-bold">@statistic.Title</p>
                                <h5 class="font-weight-bolder mb-0">
                                    @statistic.Value
                                    <span class="@statistic.TrendClass text-sm font-weight-bolder">@statistic.Trend</span>
                                </h5>
                            </div>
                        </div>
                        <div class="col-4 text-end">
                            <div class="icon icon-shape bg-gradient-primary shadow text-center border-radius-md">
                                <i class="@statistic.IconClass text-lg opacity-10" aria-hidden="true"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!--Documentation -->
<div class="row mt-4">
    <div class="col-lg-7 mb-lg-0 mb-4">
        <div class="card">
            <div class="card-body p-3">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="d-flex flex-column h-100">
                            <p class="mb-1 pt-2 text-bold">Built by developers</p>
                            <h5 class="font-weight-bolder">CAM Chat</h5>
                            <p class="mb-5">CAM Chat is a web-based communication platform designed for seamless, real-time interactions, allowing company employees to coordinate, share updates, and manage projects efficiently. Its features enhance collaboration and streamline workflows, making it an essential tool for internal communication.</p>
                            <a class="text-body text-sm font-weight-bold mb-0 icon-move-right mt-auto" @onclick="NavigateToDocumentation">
                                Read More
                                <i class="fas fa-arrow-right text-sm ms-1" aria-hidden="true"></i>
                            </a>
                        </div>
                    </div>
                    <div class="col-lg-5 ms-auto text-center mt-5 mt-lg-0">
                        <div class="bg-gradient-primary border-radius-lg h-100">
                            <img src="../assets/img/shapes/waves-white.svg" class="position-absolute h-100 w-50 top-0 d-lg-block d-none" alt="waves">
                            <div class="position-relative d-flex align-items-center justify-content-center h-100">
                                <img class="w-100 position-relative z-index-2 pt-4" src="./images/cam-chat.png" alt="rocket">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-5">
        <div class="card h-100 p-3">
            <div class="overflow-hidden position-relative border-radius-lg bg-cover h-100" style="background-image: url('../assets/img/ivancik.jpg');">
                <div class="card-body position-relative z-index-1 d-flex flex-column h-100 p-3">
                    <h5 class="text-white font-weight-bolder mb-4 pt-2">Work with the rockets</h5>
                    <p class="text-white">Wealth creation is an evolutionarily recent positive-sum game. It is all about who takes the opportunity first.</p>
                    <a class="text-white text-sm font-weight-bold mb-0 icon-move-right mt-auto" @onclick="NavigateToWorkWithRockets">
                        Read More
                        <i class="fas fa-arrow-right text-sm ms-1" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="repair-grid">
    <SfGrid @ref="MyGrid"
            DataSource="@_repairServices"
            AllowSorting="true"
            SelectionMode="GridSelectionMode.Single"
            RowSelected="RowSelectHandler"
            Height="310">
        <GridPageSettings PageSize="5"></GridPageSettings>
        <GridColumns>
            <GridColumn Field="ServiceDate" HeaderText="Service Date" Width="150" Format="d" />
            <GridColumn Field="CompanyName" HeaderText="Company Name" Width="200" />
            <GridColumn Field="itemName" HeaderText="Item Name" Width="200" />
            <GridColumn Field="ServiceLocation" HeaderText="Service Location" Width="200" />
            <GridColumn Field="ServiceType" HeaderText="Service Type" Width="150" />
            <GridColumn Field="ServicePriority" HeaderText="Service Priority" Width="150" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Center">
                <Template>
                    @{
                        var repairService = (RepairServices)context;
                        var priorityClass = string.Empty;
                        var priorityText = repairService.ServicePriority;

                        switch (priorityText)
                        {
                            case "Low":
                                priorityClass = "priority-low";
                                break;
                            case "Normal":
                                priorityClass = "priority-normal";
                                break;
                            case "High":
                                priorityClass = "priority-high";
                                break;
                            default:
                                priorityClass = "priority-default"; // Optional default class
                                break;
                        }
                    }
                    <span class="priority-badge @priorityClass">
                        @repairService.ServicePriority
                    </span>
                </Template>
            </GridColumn>
            <GridColumn HeaderText="Status" Width="300" IsFrozen="true" Freeze="FreezeDirection.Right" TextAlign="Syncfusion.Blazor.Grids.TextAlign.Center">
                <Template>
                    @{
                        var repairService = (RepairServices)context;
                        var statusClass = string.Empty;
                        var statusText = repairService.Status;
                        var statusGif = string.Empty;

                        switch (statusText)
                        {
                            case "Inspection":
                                statusClass = "status-inspection";
                                statusGif = "images/GIF/inspection.gif";
                                break;
                            case "Awaiting Customer Confirm":
                                statusClass = "status-awaiting-confirm";
                                statusGif = "images/GIF/awaiting-confirm.gif";
                                break;
                            case "Awaiting Sparepart":
                                statusClass = "status-awaiting-sparepart";
                                statusGif = "images/GIF/awaiting-sparepart.gif";
                                break;
                            case "Repairing":
                                statusClass = "status-repairing";
                                statusGif = "images/GIF/repairing.gif";
                                break;
                            case "Finished":
                                statusClass = "status-finished";
                                statusGif = "images/GIF/finished.gif";
                                break;
                            case "Customer Rejected":
                                statusClass = "status-rejected";
                                statusGif = "images/GIF/rejected.gif";
                                break;
                            case "Unrepairable":
                                statusClass = "status-unrepairable";
                                statusGif = "images/GIF/unrepairable.png";
                                break;
                            default:
                                statusClass = "status-default"; // Optional default class
                                break;
                        }
                    }
                    <span class="status-badge @statusClass">
                        @repairService.Status
                    </span>
                    <img class="status-gif" src="@statusGif" alt="Status Icon" />
                </Template>
            </GridColumn>
        </GridColumns>
    </SfGrid>
</div>
@* <!-- Chart Stat -->
<div class="row my-4">
    <div class="col-lg-8 col-md-6 mb-md-0 mb-4">
        <div class="card">
            <div class="card-header pb-0">
                <div class="row">
                    <div class="col-lg-6 col-7">
                        <h6>Projects</h6>
                        <p class="text-sm mb-0">
                            <i class="fa fa-check text-info" aria-hidden="true"></i>
                            <span class="font-weight-bold ms-1">30 done</span> this month
                        </p>
                    </div>
                    <div class="col-lg-6 col-5 my-auto text-end">
                        <div class="dropdown float-lg-end pe-4">
                            <a class="cursor-pointer" id="dropdownTable" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fa fa-ellipsis-v text-secondary"></i>
                            </a>
                            <ul class="dropdown-menu px-2 py-3 ms-sm-n4 ms-n5" aria-labelledby="dropdownTable">
                                <li><a class="dropdown-item border-radius-md" href="#">Action</a></li>
                                <li><a class="dropdown-item border-radius-md" href="#">Another action</a></li>
                                <li><a class="dropdown-item border-radius-md" href="#">Something else here</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body px-0 pb-2">
                <div class="table-responsive">
                    <table class="table align-items-center mb-0">
                        <thead>
                            <tr>
                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Companies</th>
                                <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Members</th>
                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Budget</th>
                                <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Completion</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var project in Projects)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex px-2 py-1">
                                            <div>
                                                <img src="@project.CompanyLogo" class="avatar avatar-sm me-3" alt="project-logo">
                                            </div>
                                            <div class="d-flex flex-column justify-content-center">
                                                <h6 class="mb-0 text-sm">@project.ProjectName</h6>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="avatar-group mt-2">
                                            @foreach (var member in project.TeamMembers)
                                            {
                                                <a href="javascript:;" class="avatar avatar-xs rounded-circle" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Team Member">
                                                    <img src="@member" alt="team-member">
                                                </a>
                                            }
                                        </div>
                                    </td>
                                    <td class="align-middle text-center text-sm">
                                        <span class="text-xs font-weight-bold">$@project.Budget</span>
                                    </td>
                                    <td class="align-middle">
                                        <div class="progress-wrapper w-75 mx-auto">
                                            <div class="progress-info">
                                                <div class="progress-percentage">
                                                    <span class="text-xs font-weight-bold">@project.CompletionPercentage%</span>
                                                </div>
                                            </div>
                                            <div class="progress">
                                                <div class="progress-bar bg-gradient-info" style="width: @project.CompletionPercentage%" role="progressbar" aria-valuenow="@project.CompletionPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4 col-md-6">
        <div class="card h-100">
            <div class="card-header pb-0">
                <h6>Orders overview</h6>
                <p class="text-sm">
                    <i class="fa fa-arrow-up text-success" aria-hidden="true"></i>
                    <span class="font-weight-bold">24%</span> this month
                </p>
            </div>
            <div class="card-body p-3">
                <div class="timeline timeline-one-side">
                    @foreach (var order in orders)
                    {
                        <div class="timeline-block mb-3">
                            <span class="timeline-step">
                                <i class="@order.IconClass text-gradient"></i>
                            </span>
                            <div class="timeline-content">
                                <h6 class="text-dark text-sm font-weight-bold mb-0">@order.Description</h6>
                                <p class="text-secondary font-weight-bold text-xs mt-1 mb-0">@order.Date</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div> *@



@code {
    private SfGrid<RepairServices> MyGrid;
    private IEnumerable<RepairServices> _repairServices;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _repairServices = await RepairItemService.GetAllRepairServicesAsync();


        }
        catch (Exception)
        {

        }
    }

    private List<Statistic> statistics = new List<Statistic>
    {
        new Statistic
        {
            Title = "Today's Report",
            Value = "0",
            Trend = "+0%",
            TrendClass = "text-success",
            IconClass = "ni ni-collection"
        },
        new Statistic
        {
            Title = "Today's Users",
            Value = "6",
            Trend = "+15%",
            TrendClass = "text-success",
            IconClass = "ni ni-world"
        },
        new Statistic
        {
            Title = "Customers",
            Value = "0",
            Trend = "0%",
            TrendClass = "text-danger",
            IconClass = "ni ni-paper-diploma"
        },
        new Statistic
        {
            Title = "Completed",
            Value = "0",
            Trend = "+0",
            TrendClass = "text-success",
            IconClass = "ni ni-box-2"
        }
    };

    private List<Project> Projects = new List<Project>
    {
        new Project
        {
            CompanyLogo = "../assets/img/small-logos/logo-xd.svg",
            ProjectName = "Soft UI XD Version",
            TeamMembers = new List<string>
            {
                "../assets/img/team-1.jpg",
            },
            Budget = 14000,
            CompletionPercentage = 60
        },
        new Project
        {
            CompanyLogo = "../assets/img/small-logos/logo-atlassian.svg",
            ProjectName = "Add Progress Track",
            TeamMembers = new List<string>
            {
                "../assets/img/team-2.jpg",
                "../assets/img/team-4.jpg"
            },
            Budget = 3000,
            CompletionPercentage = 10
        },
        // Add more projects as needed
    };

    private class Statistic
    {
        public string Title { get; set; }
        public string Value { get; set; }
        public string Trend { get; set; }
        public string TrendClass { get; set; }
        public string IconClass { get; set; }
    }

    public class Project
    {
        public string CompanyLogo { get; set; }
        public string ProjectName { get; set; }
        public List<string> TeamMembers { get; set; }
        public decimal Budget { get; set; }
        public int CompletionPercentage { get; set; }
    }

    private List<Order> orders = new List<Order>
    {
        new Order { IconClass = "ni ni-bell-55 text-success", Description = "$2400, Design changes", Date = "22 DEC 7:20 PM" },
        new Order { IconClass = "ni ni-html5 text-danger", Description = "New order #1832412", Date = "21 DEC 11 PM" },
        new Order { IconClass = "ni ni-cart text-info", Description = "Server payments for April", Date = "21 DEC 9:34 PM" },
        new Order { IconClass = "ni ni-credit-card text-warning", Description = "New card added for order #4395133", Date = "20 DEC 2:20 AM" },
        new Order { IconClass = "ni ni-key-25 text-primary", Description = "Unlock a new order #2480642", Date = "18 DEC 5:00 PM" }
    };

    public class Order
    {
        public string IconClass { get; set; }
        public string Description { get; set; }
        public string Date { get; set; } // This should be "Date" instead of "Time"
    }

      // This method will handle navigation to the documentation page
    private void NavigateToDocumentation()
    {    
         NavigationManager.NavigateTo("/parallax");
    }

    // This method will handle navigation to the "Work with rockets" page
    private void NavigateToWorkWithRockets()
    {
        // Navigation logic here
        // For example:
        // NavigationManager.NavigateTo("/rockets");
    }
}
